<%= javascript_include_tag "jquery.tokeninput.js" %>
<%= stylesheet_link_tag "token-input-facebook.css" %>

<% content_for :head do %>
  <script src="https://s3.amazonaws.com/churchof/jquery.isotope.min.js"></script>
  <script src="https://s3.amazonaws.com/churchof/imagesloaded-min.js"></script>
  <script type="text/javascript">

 jQuery(function(){ buildMap(map_hash, true); });

// $(document).ready(function(){
//     $('#custom_style').height($(window).height() * .6);
// });

$(document).ready(function () {
    updateSkills();
    function updateSkills(){
        $.ajax({
        url: '/skills.json',
        type: "GET",
        dataType: 'json',
        success: function(data) {
          skillsArray = data;
          $('.token-input-token-facebook').each(function(){
            $(this).addClass('custom');
            var skillText = $(this).find('p').text();
            for (i=0; i < skillsArray.length; i++){
              if(skillsArray[i].name == skillText){
                $(this).find('> p').html('<span class="skill-icon"><img src="' + skillsArray[i].icon_url + '"></span>' + skillsArray[i].name)
              }
            };
          });
        }
      });
    };

    $("#skills_list").on("change", function () {
      var selectedValue = ""
      $('#needs-full-list').html();
      selectedValue = $('#skills_list option:selected').val();
      $('.need-category-title').html(selectedValue + " Needs");
      $.ajax({
          type: "GET",
          url: "/needs",
          data: {
            selected_skills: selectedValue
          },
          dataType: "script",
          success: function(data) {
            if ($('.need-container').length == 0){
              $('#needs-full-list').html('There are no needs yet listed under this skill set.');
            }
          }
        });
    });

    $("#skills_input").tokenInput("/skills.json", {
      crossDomain: false,
      onAdd: function (item) {
        updateSkills();

        var selectedValues = $('#skills_input').tokenInput("get");
        $.ajax({
          type: "GET",
          url: "/needs",
          data: {
            selected_skills: selectedValues
          },
          dataType: "script",
        });
      },
      onDelete: function (item) {
        var selectedValues = $('#skills_input').tokenInput("get");
        $.ajax({
          type: "GET",
          url: "/needs",
          data: {
            selected_skills: selectedValues
          },
          dataType: "script",
        });
      },
      preventDuplicates: "true",
      theme: "facebook",
      prePopulate: $("#need_skill_tokens").data("pre")
    });
});

  </script>
<% end %>

<% content_for :map do %>
  <script>
    var map_hash = <%= raw @hash.to_json %>;
  </script>
  <%= render 'layouts/map' %>
<% end %>

<div class="page-header-block">
  <h1 class="need-category-title">All Needs</h1>
  <div class="skills-filter">
    <label>Filter:</label>
    <select id="skills_list" class="skill-select">
      <option value="">All Needs</option>
      <%- @skills_represented.each do | skill | %>
        <option data-tag="#{skill.name}">
          <%= skill.name %>
        </div>
      <% end %>
    </select>
  </div>
</div>

<div class="needs main-content" id="needs-full-list">
  <%= render @needs %>
</div>

<% if @needs.count > 0 %>
<br><br><br>
<% end %>

<% if @completed_needs.count > 0 %>

  <h1 class="need-category-title">Completed Needs</h1>

<div class="completed-needs main-content" id="isotope-demo">
  <% @completed_needs.in_groups_of(2, false) do |completed_needs| %>

    <% completed_needs.each do |completed_need| %>
           <div class="element-item" id="<%= completed_need.id %>">

      <%= render partial: 'needs/completed_need', locals: { need: completed_need } %>
             </div>

    <% end %>

  <% end %>
</div>

<% end %>

<script>
  $(document).ready(function(){
    $('.need-button-block').each(function(){
      var className;
      var needButtonCount = $(this).find('.need-btn-link').length;
        if (needButtonCount == 1){
          className = "need-xs-12";
        }else if(needButtonCount == 2){
          className = "need-xs-6";
        }else if(needButtonCount == 3){
          className = "need-xs-4";
        }

      $(this).find('.need-btn-link').each(function(){
        $(this).addClass(className);
      });
    });
  })

</script>

<script>
var $container = $('#isotope-demo').imagesLoaded( function() {
  $container = $('#isotope-demo').isotope({
    itemSelector: '.element-item',
    layoutMode: 'masonry',
    masonry: {
      columnWidth: 310
    }
  });

});
</script>



<% @completed_needs.each do |completed_need| %>

  <% completed_need.updates.each do |update| %>
    <div class="modal fade" id="PublicUpdateModal<%= update.id%>" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel"><%= update.title %></h4>
          </div>
          <div class="modal-body">
    <!--         This only shows the first...
     -->
            <%= update.content %>

            <br>
            <br>
            <% update.images.each do |image| %>
            <div class="image-modal">
              <%= image_tag(image.image) %>
            </div>
              <br>
              <%= image.caption %>
              <br>
              <br>
            <% end %>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>
  <% end %>

<% end %>

<style>
/* ---- isotope ---- */
/* clear fix */
.isotope:after {
  content: '';
  display: block;
  clear: both;
}

/* ---- .element-item ---- */
.isotope, .isotope .isotope-item{
  -webkit-transition-duration: 0.8s;
  -moz-transition-duration: 0.8s;
  -ms-transition-duration: 0.8s;
  -o-transition-duration: 0.8s;
  transition-duration: 0.8s;
}
.isotope{
  -webkit-transition-property: height, width;
  -moz-transition-property: height, width;
  -ms-transition-property: height, width;
  -o-transition-property: height, width;
  transition-property: height, width;
}
.isotope .isotope-item{
  -webkit-transition-property: -webkit-transform, opacity;
  -moz-transition-property:    -moz-transform, opacity;
  -ms-transition-property:     -ms-transform, opacity;
  -o-transition-property:      -o-transform, opacity;
  transition-property:         transform, opacity;
}
.isotope.no-transition, .isotope.no-transition .isotope-item, .isotope .isotope-item.no-transition{
  -webkit-transition-duration: 0s;
  -moz-transition-duration: 0s;
  -ms-transition-duration: 0s;
  -o-transition-duration: 0s;
  transition-duration: 0s;
}
.element-item {
  position: relative;
  float: left;
  width: 300px;
  height: auto;
  margin: 5px;
  padding: 0px;
  color: #FFF;
}

  .element-item a img{
    opacity: .8;
  }
  .element-item a:hover img{
    opacity: 1;
  }


    .element-item.width2 { width: 230px; height: auto;}
.element-item.height2 { height: auto; }

.element-item > * {
  margin: 0;
  padding: 0;
}

.element-item .symbol {
  position: absolute;
  left: 10px;
  top: 0px;
  font-size: 42px;
  font-weight: bold;
  color: white;
}
  </style>